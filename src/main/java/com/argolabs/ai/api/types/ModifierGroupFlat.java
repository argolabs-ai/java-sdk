/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.argolabs.ai.api.types;

import com.argolabs.ai.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ModifierGroupFlat.Builder.class)
public final class ModifierGroupFlat {
    private final String externalId;

    private final String type;

    private final MultilingualText name;

    private final Optional<MultilingualText> description;

    private final int groupMax;

    private final int groupMin;

    private final int chargeAfter;

    private final Optional<List<String>> modifierItemExternalIds;

    private final int id;

    private final Map<String, Object> additionalProperties;

    private ModifierGroupFlat(
            String externalId,
            String type,
            MultilingualText name,
            Optional<MultilingualText> description,
            int groupMax,
            int groupMin,
            int chargeAfter,
            Optional<List<String>> modifierItemExternalIds,
            int id,
            Map<String, Object> additionalProperties) {
        this.externalId = externalId;
        this.type = type;
        this.name = name;
        this.description = description;
        this.groupMax = groupMax;
        this.groupMin = groupMin;
        this.chargeAfter = chargeAfter;
        this.modifierItemExternalIds = modifierItemExternalIds;
        this.id = id;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("external_id")
    public String getExternalId() {
        return externalId;
    }

    @JsonProperty("type")
    public String getType() {
        return type;
    }

    @JsonProperty("name")
    public MultilingualText getName() {
        return name;
    }

    @JsonProperty("description")
    public Optional<MultilingualText> getDescription() {
        return description;
    }

    @JsonProperty("group_max")
    public int getGroupMax() {
        return groupMax;
    }

    @JsonProperty("group_min")
    public int getGroupMin() {
        return groupMin;
    }

    @JsonProperty("charge_after")
    public int getChargeAfter() {
        return chargeAfter;
    }

    @JsonProperty("modifier_item_external_ids")
    public Optional<List<String>> getModifierItemExternalIds() {
        return modifierItemExternalIds;
    }

    @JsonProperty("id")
    public int getId() {
        return id;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ModifierGroupFlat && equalTo((ModifierGroupFlat) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ModifierGroupFlat other) {
        return externalId.equals(other.externalId)
                && type.equals(other.type)
                && name.equals(other.name)
                && description.equals(other.description)
                && groupMax == other.groupMax
                && groupMin == other.groupMin
                && chargeAfter == other.chargeAfter
                && modifierItemExternalIds.equals(other.modifierItemExternalIds)
                && id == other.id;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.externalId,
                this.type,
                this.name,
                this.description,
                this.groupMax,
                this.groupMin,
                this.chargeAfter,
                this.modifierItemExternalIds,
                this.id);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ExternalIdStage builder() {
        return new Builder();
    }

    public interface ExternalIdStage {
        TypeStage externalId(String externalId);

        Builder from(ModifierGroupFlat other);
    }

    public interface TypeStage {
        NameStage type(String type);
    }

    public interface NameStage {
        GroupMaxStage name(MultilingualText name);
    }

    public interface GroupMaxStage {
        GroupMinStage groupMax(int groupMax);
    }

    public interface GroupMinStage {
        ChargeAfterStage groupMin(int groupMin);
    }

    public interface ChargeAfterStage {
        IdStage chargeAfter(int chargeAfter);
    }

    public interface IdStage {
        _FinalStage id(int id);
    }

    public interface _FinalStage {
        ModifierGroupFlat build();

        _FinalStage description(Optional<MultilingualText> description);

        _FinalStage description(MultilingualText description);

        _FinalStage modifierItemExternalIds(Optional<List<String>> modifierItemExternalIds);

        _FinalStage modifierItemExternalIds(List<String> modifierItemExternalIds);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ExternalIdStage,
                    TypeStage,
                    NameStage,
                    GroupMaxStage,
                    GroupMinStage,
                    ChargeAfterStage,
                    IdStage,
                    _FinalStage {
        private String externalId;

        private String type;

        private MultilingualText name;

        private int groupMax;

        private int groupMin;

        private int chargeAfter;

        private int id;

        private Optional<List<String>> modifierItemExternalIds = Optional.empty();

        private Optional<MultilingualText> description = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ModifierGroupFlat other) {
            externalId(other.getExternalId());
            type(other.getType());
            name(other.getName());
            description(other.getDescription());
            groupMax(other.getGroupMax());
            groupMin(other.getGroupMin());
            chargeAfter(other.getChargeAfter());
            modifierItemExternalIds(other.getModifierItemExternalIds());
            id(other.getId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("external_id")
        public TypeStage externalId(String externalId) {
            this.externalId = externalId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("type")
        public NameStage type(String type) {
            this.type = type;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public GroupMaxStage name(MultilingualText name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        @JsonSetter("group_max")
        public GroupMinStage groupMax(int groupMax) {
            this.groupMax = groupMax;
            return this;
        }

        @java.lang.Override
        @JsonSetter("group_min")
        public ChargeAfterStage groupMin(int groupMin) {
            this.groupMin = groupMin;
            return this;
        }

        @java.lang.Override
        @JsonSetter("charge_after")
        public IdStage chargeAfter(int chargeAfter) {
            this.chargeAfter = chargeAfter;
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public _FinalStage id(int id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        public _FinalStage modifierItemExternalIds(List<String> modifierItemExternalIds) {
            this.modifierItemExternalIds = Optional.ofNullable(modifierItemExternalIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "modifier_item_external_ids", nulls = Nulls.SKIP)
        public _FinalStage modifierItemExternalIds(Optional<List<String>> modifierItemExternalIds) {
            this.modifierItemExternalIds = modifierItemExternalIds;
            return this;
        }

        @java.lang.Override
        public _FinalStage description(MultilingualText description) {
            this.description = Optional.ofNullable(description);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "description", nulls = Nulls.SKIP)
        public _FinalStage description(Optional<MultilingualText> description) {
            this.description = description;
            return this;
        }

        @java.lang.Override
        public ModifierGroupFlat build() {
            return new ModifierGroupFlat(
                    externalId,
                    type,
                    name,
                    description,
                    groupMax,
                    groupMin,
                    chargeAfter,
                    modifierItemExternalIds,
                    id,
                    additionalProperties);
        }
    }
}
